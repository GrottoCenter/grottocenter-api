name: Build
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '10.15.2'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install
      - run: npm run-script build
  s3:
    if: github.ref == 'refs/heads/master'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - run: tar --exclude-vcs -czf latest.tar.gz --exclude=*.tar --exclude=*.tar.gz .
      - name: Archive code coverage results
        uses: actions/upload-artifact@v2
        with:
          name: latest.tar.gz
          path: latest.tar.gz
          retention-days: 1
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Copy tar.gz to S3
        run: |
          aws s3 sync ./latest.tar.gz s3://appgrottocenter3
