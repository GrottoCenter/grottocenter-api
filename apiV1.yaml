openapi: '3.0.0'

info:
  description: 'This page documents the available API you can use on your website.'
  title: 'Grottocenter 3 - REST API'
  version: 'v.1'
  termsOfService: 'https://wiki.grottocenter.org/wiki/GrottoCenter:En/API'
  contact:
    name: 'Slack space'
    url: 'https://grottocenter.slack.com/messages/C858CHARY/'
  license:
    name: 'CC BY-SA 3.0'
    url: 'https://creativecommons.org/licenses/by-sa/3.0/'

servers:
- url: http://beta.grottocenter.org/api/v1
- url: https://beta.grottocenter.org/api/v1

tags:
- name: entry
- name: search
- name: geoloc

paths:
  '/entries':
    get:
      tags:
      - entry
      description: Get a list of public entries correponding to the given parameters
      parameters:
      - name: name
        in: query
        description: Entry name (or part of name)
        required: true
        schema:
          type: string
      - name: region
        in: query
        description: Entry region (or part of name)
        required: false
        schema:
          type: string
      - name: range
        in: query
        description: Range of data to retreive (for pagination)
        required: false
        schema:
          type: string
          pattern: '^[0-9]+-[0-9]+$'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Entry"
        '206':
          description: Successful operation (partial content)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Entry"
        '404':
          description: Resource not found
        '500':
          description: Internal error
  '/entries/{entryId}':
    get:
      tags:
      - entry
      description: Get a public entry by ID
      parameters:
      - name: entryId
        in: path
        description: Entry ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        '404':
          description: Resource not found
        '500':
          description: Internal error
  '/entry/{entryId}':
    get:
      tags:
      - entry
      deprecated: true
      summary: DEPRECATED - Please switch your code to use /entries instead
      description: Get a public entry by ID
      parameters:
      - name: entryId
        in: path
        description: Entry ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        '404':
          description: Resource not found
        '500':
          description: Internal error

  '/entry/publicCount':
    get:
      tags:
      - entry
      deprecated: true
      description: Get the number of public entries referenced in GC3 database
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
        '500':
          description: Internal error
          
  '/search':
    get:
      tags:
      - search
      deprecated: false
      summary: Search for resources (entries, massifs & organizations)
      description: Search for resources (entries, massifs & organizations). Case insensitive. Search over a lots of resource properties (not only name).
      parameters:
      - name: query
        in: query
        description: Resource property (or part of property)
        required: true
        schema:
          type: string
      - name: complete
        in: query
        description: Does the query need to send every information about the results ? If set to false, returns only the id and the name of each result.
        required: false
        schema:
          type: boolean
          default: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search'
        '404':
          description: Resource not found
        '500':
          description: Internal error
          
  '/search/findAll':
    get:
      tags:
      - search
      deprecated: true
      summary: DEPRECATED - Please switch your code to use /entries or /search instead
      description: Search for resources by name
      parameters:
      - name: name
        in: query
        description: Resource name (or part of name)
        required: true
        schema:
          type: string
      - name: range
        in: query
        description: Range of data to retreive (for pagination)
        required: false
        schema:
          type: string
          pattern: '^[0-9]+-[0-9]+$'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search_findAll'
        '206':
          description: Successful operation (partial content)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Search_findAll'
        '404':
          description: Resource not found
        '500':
          description: Internal error

  '/geoloc/countEntries':
    get:
      tags:
      - geoloc
      description: Count entries contained inside the given coords
      parameters:
      - name: sw_lat
        in: query
        description: South West latitude
        required: true
        schema:
          type: string
      - name: sw_lng
        in: query
        description: South West longitude
        required: true
        schema:
          type: string
      - name: ne_lat
        in: query
        description: North East latitude
        required: true
        schema:
          type: string
      - name: ne_lng
        in: query
        description: North East longitude
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Count'
        '404':
          description: Resource not found
        '500':
          description: Internal error
  '/geoloc/findByBounds':
    get:
      tags:
      - geoloc
      description: Find entries contained inside the given coords
      parameters:
      - name: sw_lat
        in: query
        description: South West latitude
        required: true
        schema:
          type: string
      - name: sw_lng
        in: query
        description: South West longitude
        required: true
        schema:
          type: string
      - name: ne_lat
        in: query
        description: North East latitude
        required: true
        schema:
          type: string
      - name: ne_lng
        in: query
        description: North East longitude
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Geoloc'
        '404':
          description: Resource not found
        '500':
          description: Internal error
  '/massifs/{massifId}':
    get:
      tags:
      - massif
      description: Get a massif, its author and all its caves
      parameters:
      - name: massifId
        in: path
        description: Massif ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Massif"
        '404':
          description: Resource not found
        '500':
          description: Internal error
  '/api/grottos/:id':
    get:
      tags:
      - grotto
      description: Get a grotto that means an organization or a group of cavers.
      parameters:
      - name: grottoId
        in: path
        description: Grotto ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Grotto"
        '404':
          description: Resource not found
        '500':
          description: Internal error

components:
  schemas:
    Count:
      type: object
      properties:
        count:
          type: integer
          format: int64
    Entry:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        country:
          type: string
        county:
          type: string
        region:
          type: string
        city:
          type: string
        postalCode:
          type: string
        latitude:
          type: string
        longitude:
          type: string
        altitude:
          type: string
    EntryGroup:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        latitude:
          type: string
        longitude:
          type: string
    Search_findAll:
      properties:
        entries:
          type: array
          items:
            $ref: "#/components/schemas/Entry"
            
    Search:
      properties:
        results:
          type: array
          items: 
            oneOf:
              - $ref: '#/components/schemas/Entry'
              - $ref: '#/components/schemas/Massif'
              - $ref: '#/components/schemas/Grotto'
    Geoloc:
      properties:
        entries:
          type: array
          items:
            anyOf:
            - $ref: '#/components/schemas/Entry'
            - $ref: '#/components/schemas/EntryGroup'
    Caver:
      type: object
      properties:
        id: 
          type: integer
          format: int64
        nickname: 
          type: string
    Cave:
      type: object
      properties:
        id: 
          type: integer
          format: int64
        locked: 
          type: boolean
        idReviewer: 
          type: integer
          format: int64
        idLocker: 
          type: integer
          format: int64
        name: 
          type: string
        minDepth: 
          type: integer
          format: int64
        maxDepth: 
          type: integer
          format: int64
        depth: 
          type: integer
          format: int64
        length: 
          type: integer
          format: int64
        isDiving: 
          type: boolean
        temperature: 
          type: integer
          format: int64
        dateInscription: 
          type: string
        dateReviewed: 
          type: string
        dateLocked: 
          type: string
        author: 
          type: integer
          format: int64
    Massif:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author: 
            $ref: '#/components/schemas/Caver'
        idReviewer:
          type: integer
          format: int64
        name:
          type: string
        dateInscription:
          type: string
        dateReviewed:
          type: string
        caves:
          type: array
          items: 
            $ref: '#/components/schemas/Cave'
    Grotto:
      type: object
      properties:
        id: 
          type: integer
          format: int64
        author: 
          $ref: '#/components/schemas/Caver'
        idReviewer: 
          type: integer
          format: int64
        name: 
          type: 'string'
        country:
          type: 'string'
        region: 
          type: 'string'
        city: 
          type: 'string'
        postalCode:
          type: 'string'
        address:
          type: 'string'
        contact:
          type: 'string'
        yearBirth:
          type: 'string'
        dateInscription: 
          type: 'string'
        dateReviewed: 
          type: 'string'
        latitude: 
          type: integer
          format: int64
        longitude: 
          type: integer
          format: int64
        customMessage: 
          type: 'string'
        pictureFileName: 
          type: 'string'
        isOfficialPartner: 
          type: 'boolean'
        village: 
          type: 'string'
        county:
          type: 'string'
        cavers: 
          type: array
          items: 
            $ref: '#/components/schemas/Caver'
        entries: 
          type: array
          items: 
            $ref: '#/components/schemas/Entry'

  '/grottos/{grottoId}':
