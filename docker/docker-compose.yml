version: '3.3'
# Author: Cl√©ment Ronzon - Wikicaves
# Date: Feb 13 2021
# Requirement: docker, docker-compose

services:
  dbserver:
    container_name: ${POSTGRES_CONTAINER_NAME}
    image: postgis/postgis
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready
    volumes:
      - ../sql:/docker-entrypoint-initdb.d
      - gc-postgis-data:/var/lib/postgresql
    restart: always
    ports:
      - ${POSTGRES_LOCAL_PORT}:5432

  testdbserver:
    container_name: ${POSTGRES_TEST_CONTAINER_NAME}
    image: postgis/postgis
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    healthcheck:
      test: pg_isready
    volumes:
      # Just use initDatabase sql request. The tests will populate it by themselves.
      - ../sql/0_initDatabase.sql:/docker-entrypoint-initdb.d/init.sql
      - gc-postgis-test-data:/var/lib/postgresql
    ports:
      - ${POSTGRES_TEST_LOCAL_PORT}:5432

  elasticsearch:
    container_name: ${ES_CONTAINER_NAME}
    image: elasticsearch:${ES_AND_LS_VERSION}
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
    environment:
      - discovery.type=single-node
      # Prevent flood stage on disk with small free space
      - cluster.routing.allocation.disk.watermark.low=3gb
      - cluster.routing.allocation.disk.watermark.high=2gb
      - cluster.routing.allocation.disk.watermark.flood_stage=1gb
      - http.cors.enabled=true
      - http.cors.allow-origin=https://app.elasticvue.com
    volumes:
      - gc-es-data:/usr/share/elasticsearch/data
    ports:
      - ${ES_LOCAL_PORT}:9200
      - 9300:9300
    depends_on:
      - dbserver

  logstash:
    container_name: ${LS_CONTAINER_NAME}
    restart: unless-stopped
    build:
      context: ./
      dockerfile: logstash.Dockerfile
      args:
        - ES_AND_LS_VERSION=${ES_AND_LS_VERSION}
    command: logstash -r -f /config-dir/logstash.conf
    environment:
      - XPACK.MONITORING.ELASTICSEARCH.URL=${ES_CONTAINER_NAME}
      - CONFIG.SUPPORT_ESCAPES=true
      - JDBC_POSTGRESQL=jdbc:postgresql://${POSTGRES_CONTAINER_NAME}:5432/${POSTGRES_DATABASE}
      - JDBC_USER=${POSTGRES_USER}
      - JDBC_PASSWORD=${POSTGRES_PASSWORD}
      - ES_HOSTS=${ES_CONTAINER_NAME}:${ES_LOCAL_PORT}
    healthcheck:
      test: curl -X GET "localhost:9600" --silent
      retries: 5
    volumes:
      - ./logstash.conf:/config-dir/logstash.conf
      - ./postgresql-connector.jar:/config-dir/postgresql-connector.jar
    depends_on:
      - elasticsearch

  # # For debuging postgresql
  # pgadmin:
  #   image: dpage/pgadmin4:7.4
  #   container_name: grotto-pgadmin
  #   restart: unless-stopped
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@admin.com
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   volumes:
  #     - ./pdagmin.servers.json:/pgadmin4/servers.json
  #   ports:
  #     - '5050:80'
  #   depends_on:
  #     - dbserver
  #     - testdbserver

volumes:
  gc-postgis-data:
  gc-postgis-test-data:
  gc-es-data:
